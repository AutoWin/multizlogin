<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Đổi mật khẩu | Zalo Server</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      max-width: 500px;
      margin: 0 auto;
      padding: 20px;
      background-color: #f5f5f5;
    }
    h1 {
      color: #0068ff;
      border-bottom: 1px solid #eee;
      padding-bottom: 10px;
      text-align: center;
    }
    .form-container {
      background-color: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
    .form-group {
      margin-bottom: 15px;
    }
    label {
      display: block;
      margin-bottom: 5px;
      font-weight: 500;
    }
    input {
      width: 100%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      box-sizing: border-box;
      font-size: 16px;
    }
    button {
      background-color: #0068ff;
      color: white;
      border: none;
      padding: 12px 20px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
      width: 100%;
      margin-top: 10px;
    }
    button:hover {
      background-color: #0050c8;
    }
    .message {
      margin-top: 15px;
      padding: 10px;
      border-radius: 4px;
      display: none;
    }
    .success {
      color: #28a745;
      background-color: #d4edda;
      border: 1px solid #c3e6cb;
    }
    .error {
      color: #dc3545;
      background-color: #f8d7da;
      border: 1px solid #f5c6cb;
    }
    .back-link {
      display: block;
      margin-top: 20px;
      text-align: center;
      color: #0068ff;
      text-decoration: none;
    }
    .back-link:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <h1>Đổi mật khẩu</h1>

  <div class="form-container">
    <form id="changePasswordForm">
      <div class="form-group">
        <label for="oldPassword">Mật khẩu hiện tại:</label>
        <input type="password" id="oldPassword" name="oldPassword" required autocomplete="current-password">
      </div>

      <div class="form-group">
        <label for="newPassword">Mật khẩu mới:</label>
        <input type="password" id="newPassword" name="newPassword" required autocomplete="new-password">
      </div>

      <div class="form-group">
        <label for="confirmPassword">Xác nhận mật khẩu mới:</label>
        <input type="password" id="confirmPassword" name="confirmPassword" required autocomplete="new-password">
      </div>

      <button type="submit">Đổi mật khẩu</button>
    </form>

    <div id="message" class="message"></div>
  </div>

  <a href="/" class="back-link">Quay lại trang chủ</a>

  <script src="/test.js"></script>

  <script>
    // Hiển thị lỗi 404 trên trang
    window.addEventListener('error', function(e) {
      if (e.target.tagName === 'IMG' || e.target.tagName === 'SCRIPT' || e.target.tagName === 'LINK') {
        const messageDiv = document.getElementById('message');
        messageDiv.textContent = 'Lỗi 404: Không thể tải ' + e.target.src || e.target.href;
        messageDiv.className = 'message error';
        messageDiv.style.display = 'block';
      }
    }, true);

    // Log tất cả các request mạng lỗi
    const originalFetch = window.fetch;
    window.fetch = function() {
      return originalFetch.apply(this, arguments)
        .then(response => {
          if (!response.ok) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = `Lỗi ${response.status} khi gọi ${arguments[0]}`;
            messageDiv.className = 'message error';
            messageDiv.style.display = 'block';
          }
          return response;
        })
        .catch(error => {
          const messageDiv = document.getElementById('message');
          messageDiv.textContent = `Lỗi khi gọi ${arguments[0]}: ${error.message}`;
          messageDiv.className = 'message error';
          messageDiv.style.display = 'block';
          throw error;
        });
    };

    document.getElementById('changePasswordForm').addEventListener('submit', async function(e) {
      e.preventDefault();

      const oldPassword = document.getElementById('oldPassword').value;
      const newPassword = document.getElementById('newPassword').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      const messageDiv = document.getElementById('message');

      // Kiểm tra mật khẩu mới và xác nhận mật khẩu
      if (newPassword !== confirmPassword) {
        messageDiv.textContent = 'Mật khẩu mới và xác nhận mật khẩu không khớp';
        messageDiv.className = 'message error';
        messageDiv.style.display = 'block';
        return;
      }

      try {
        const response = await fetch('/api/change-password', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ oldPassword, newPassword }),
          credentials: 'include'
        });

        const data = await response.json();

        if (response.ok) {
          messageDiv.textContent = 'Đã đổi mật khẩu thành công!';
          messageDiv.className = 'message success';

          // Reset form
          document.getElementById('oldPassword').value = '';
          document.getElementById('newPassword').value = '';
          document.getElementById('confirmPassword').value = '';
        } else {
          messageDiv.textContent = data.message || 'Lỗi khi đổi mật khẩu.';
          messageDiv.className = 'message error';
        }

        messageDiv.style.display = 'block';
      } catch (error) {
        console.error('Lỗi khi gửi yêu cầu:', error);
        messageDiv.textContent = 'Đã xảy ra lỗi khi kết nối đến máy chủ: ' + error.message;
        messageDiv.className = 'message error';
        messageDiv.style.display = 'block';
      }
    });
  </script>
</body>
</html>
